// <auto-generated />
using System;
using MathBot.Models.ORM.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MathBot.Migrations
{
    [DbContext(typeof(MathBotContext))]
    [Migration("20210530120454_mb")]
    partial class mb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MathBot.Models.ORM.Entities.Operation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("FirstNumber")
                        .HasColumnType("double precision");

                    b.Property<int>("OperationType")
                        .HasColumnType("integer");

                    b.Property<double>("Result")
                        .HasColumnType("double precision");

                    b.Property<double>("SecondNumber")
                        .HasColumnType("double precision");

                    b.HasKey("ID");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("MathBot.Models.ORM.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MathBot.Models.ORM.Entities.UserOperation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("OperationId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("OperationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperation");
                });

            modelBuilder.Entity("MathBot.Models.ORM.Entities.UserOperation", b =>
                {
                    b.HasOne("MathBot.Models.ORM.Entities.Operation", "Operation")
                        .WithMany("UserOperations")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathBot.Models.ORM.Entities.User", "User")
                        .WithMany("UserOperations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MathBot.Models.ORM.Entities.Operation", b =>
                {
                    b.Navigation("UserOperations");
                });

            modelBuilder.Entity("MathBot.Models.ORM.Entities.User", b =>
                {
                    b.Navigation("UserOperations");
                });
#pragma warning restore 612, 618
        }
    }
}
